services:
    db:
        image: postgres:15
        restart: always
        env_file:
            - .env
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - "5432:5432"
        volumes:
            - pgdata:/var/lib/postgresql/data
    backend:
        build: ./backend
        tty: true
        env_file:
            - .env
        environment:
            - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
            - CELERY_BROKER_URL=redis://redis:6379/0
            - CELERY_BACKEND_URL=redis://redis:6379/0
        command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
        volumes:
            - ./backend/alembic:/app/alembic
            - ./backend/auth.py:/app/auth.py
            - ./backend/main.py:/app/main.py
            - ./backend/models.py:/app/models.py
            - ./backend/recipe.py:/app/recipe.py
            - ./data:/data
            - ./backend/audio_files:/app/audio_files
        depends_on:
            - db
        ports:
            - "8000:8000"
    frontend:
        build:
            context: ./frontend
            args:
                - VITE_API_URL=http://backend:8000
        environment:
            - NODE_ENV=production
            - VITE_API_URL=http://backend:8000
        command: ["nginx", "-g", "daemon off;"]
        ports:
            - "80:80"
        depends_on:
            - backend
    redis:
        image: redis:latest
        restart: always
        ports:
            - "6379:6379"
        environment:
            - TZ=Europe/Paris
        volumes:
            - redis_data:/data
    nlp_worker:
        deploy:
            resources:
                reservations:
                    devices:
                        - driver: nvidia
                          count: all
                          capabilities: [gpu]
        build: ./nlp_processing
        mem_limit: 8g
        tty: true
        working_dir: /app
        volumes:
            - ./nlp_processing:/app
            - ./backend/models.py:/app/models.py
            - ./data:/data
            - ./backend/audio_files:/app/audio_files
        env_file:
            - .env
        environment:
            - TZ=Europe/Paris
            - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
            - CELERY_BROKER_URL=redis://redis:6379/0
            - CELERY_BACKEND_URL=redis://redis:6379/0
        command:
            [
                "celery",
                "-A",
                "worker.celery_worker.celery_app",
                "worker",
                "--loglevel=info",
                "--pool=gevent",
            ]
        depends_on:
            - backend
            - redis

volumes:
    pgdata:
        driver: local
    redis_data:
        driver: local
